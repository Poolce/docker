#
name: Create and publish a Docker image

# Configures this workflow to run every time a change is pushed to the branch called `release`.
on:
  push:
    paths:
    - '*/**'

# Defines two custom environment variables for the workflow. These are used for the Container registry domain, and a name for the Docker image that this workflow builds.
env:
  REGISTRY: ghcr.io

# There is a single job in this workflow. It's configured to run on the latest available version of Ubuntu.
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dir:
        - cuda_toolkit
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
      # 
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Check changes in a specific directory
        id: check_changes
        run: |
          if git diff --name-only HEAD^ HEAD -- "${{ matrix.dir }}" | grep -q .; then
            echo "Changes detected in ${{ matrix.dir }}"
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "No changes detected in ${{ matrix.dir }}"
            echo "changed=false" >> $GITHUB_OUTPUT
          fi
      - name: Log in to the Container registry
        if: steps.check_changes.outputs.changed == 'true'
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        if: steps.check_changes.outputs.changed == 'true'
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ matrix.dir }}
      - name: Build and push Docker image ${{ matrix.dir }}
        if: steps.check_changes.outputs.changed == 'true'
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: ./cuda_toolkit/
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Generate artifact attestation
        if: steps.check_changes.outputs.changed == 'true'
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ matrix.dir }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
    
